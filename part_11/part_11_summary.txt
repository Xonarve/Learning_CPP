---------------------
Перегрузка операций
Перегрузка функций, операций - пример полиморфизма.
Синтакис перегрузки функции:
operatorop(список-аргументов), op - символ перегружаемой операции.
district2 = sid + sara;
компилятор заменяет данное выражение на следующуюю конструкцию:
district2 = sid.operator+(sara);
---------------------
Дружественные функции
Дружественные функции получают доступ к скрытам данным-членам класса, прототипы объявляются
в области видимости класса.
Объявление прототипа дружественной функции необходимо предварить ключевым словом friend.
---------------------
Преобразование пользовательских типов
Если определяемый тип в достаточной мере связан с базовым типом или с другим пользовательским типом,
имеет смысл организовать преобразование одного типа в другой.
При этом можно указать как преобразовывать данный тип - автоматически, или же с помощью приведения типа.
Любой конструктор, который принимает единственный аргумент, действует как инструмент копирования
для преобразования типа аргумента в тип класса:
Stonewt(double lbs);
Stonewt myT;
myT = 15.44; (создание временного объекта и присваение), пример неявного преобразования.
Ключевое слово explicit - отключает такое неявное преобразование,
слово указывается при объявлении прототипа конструктора. Однако, явное преобразование по-прежнему разрешено:
myT = (Stonewt) 12.05 - разрешено.

