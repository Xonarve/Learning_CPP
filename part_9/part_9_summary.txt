При раздельной компиляции обычно необходимо объявить в отдельном файле заголовки 
(прототипы функций, константы, шаблон структуры, класса и тп)
Второй файл представляет из себя определения всех элементов, описанных в заголовочном файле.
Третий файл является главным и обеспечивает работу программы, используя свою логику и пользовательский набор.
Директива препроцессора #ifndef позволяет обеспечить лишь единождое включение заголовочного файла.
Разные версии компилятора могут создавать разные объектные файлы, т.о существует вероятность некорректной линковки
нескольких файлов. Например: Заголовочной файл с прототипами функций (скомпилированный одной версией) 
и файл с определениями самих функций (скомпилированный другой версией).
-------------------
Продолжительность хранения в СИ++
-Автоматическая
Элементы создаются, когда программа входит в соотвествующий блок, где эти переменный были определены и уничтожаются, когда
программа выходит из данного блока.
Существует два вида автоматических переменных.
-Статическая 
Элементы, объявленные с использованием ключевого слова "static".
Они существуют в течении всего времени выполнения программы.
Существует три вида переменных со статической продолжительностью хранения.
-Потоковая
Переменные, объявленные с использованием ключевого слова thread_local хранятся на протяжении времени
существования содержащего их потока.
-Динамическая
Переменные, получающие место в памяти с помощью операции "new" и уничтожающиеся и памяти при помощи операции "delete"
или же по завершению программы.
Имя с внешним связыванием используется в множестве файлов.
Имя с внутренним связыванием используется в одном файле.
Переменная с локальной областью видимости имеет область видимости блока (функции).
Переменная с глобальной областью видимости имеет область видимости файла(ов)
Глобальная область видимости - частный случай области видимости пространства имен.
ОБЛАСТЬ ВИДИМОСТИ НАЧИНАЕТСЯ ТОЛЬКО ПОСЛЕ ТОЧКИ ОБЪЯВЛЕНИЯ.
---------------------
Автоматическая продолжительность хранения.
Реализация добавления и удаления автоматических переменных может быть хорошо продемонстрирована на примере работы стека.
Новые автоматические переменные добавляются поверх старых.
Формальные параметры функции связываются с ее аргументами при выполнении функции?
Ключевое слово register - ранее использовалось для помещения автоматической переменной в регистровую память процессора.
Начиная с С++11 данный модификатор устарел и использутся лишь для того, чтобы явно указать, что объявляется автоматическая
переменная.
-------------------
Статическая продолжительность хранения.
Три вида связывания: внешнее, внутреннее, отсутствие связывания.
Компилятор резервирует фиксированный блок памяти для хранения всех статических переменных.
Если переменная не инициализированна явно, компилятор устанавливает ее значение в 0 (массивы и структуры также).

- Создание статической переменной с внешним связыванием осуществляется объявлением данной переменной вне всех блоков.
- Создание статической переменной с внутренним связыванием осуществляется объявлением данной переменной вне всех блоков
и указанием для данной переменной модификатора класса хранения static.
- Создание статической переменной без связывания осуществляется объявлением данной переменной вне всех блоков
с модификатором static.

Инициализация переменных со статической продолжительностью хранения 0-ми или константным выражением - статическая инициализация
(статическая инициализация происходит во время обработки единицы трансляции компилятором.)

Если внешняя переменная используется с нескольких файлах (т.е имеет внешнее связывание, т.е глобальная переменная), то
согласно "правилу одного определения" лишь один файл должен содержать определение данной переменной, остальные файлы,
использующие эту переменную должны ссылаться на нее с помощью ключевого слова "extern".

Если в некотором блоке объявлена локальная переменная с тем же именем, что и глобальная, то доступ к последеней (в этом блоке)
осуществляется с помощью оперерации разрешения контекста.

Если статическая переменная без связывания инициализирована, то только один раз - при запуске программы.
